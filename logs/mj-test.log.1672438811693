INFO  23:20:00,111 - Compiling source file: /Users/stankovicuros27/Code/university/pp1_project/workspace/MJCompiler/test/program.mj
INFO  23:20:00,126 - #2 program
INFO  23:20:00,126 - #47 p
INFO  23:20:00,126 - #6 const
INFO  23:20:00,126 - #47 int
INFO  23:20:00,126 - #47 size
INFO  23:20:00,126 - #30 =
INFO  23:20:00,126 - #46 10
INFO  23:20:00,126 - #33 ;
INFO  23:20:00,126 - #4 class
INFO  23:20:00,127 - #47 Table
INFO  23:20:00,127 - #41 {
INFO  23:20:00,127 - #47 int
INFO  23:20:00,127 - #47 pos
INFO  23:20:00,127 - #39 [
INFO  23:20:00,127 - #40 ]
INFO  23:20:00,127 - #35 ,
INFO  23:20:00,127 - #47 neg
INFO  23:20:00,128 - #39 [
INFO  23:20:00,128 - #40 ]
INFO  23:20:00,128 - #35 ,
INFO  23:20:00,128 - #47 factor
INFO  23:20:00,128 - #33 ;
INFO  23:20:00,128 - #41 {
INFO  23:20:00,128 - #13 void
INFO  23:20:00,128 - #47 putp
INFO  23:20:00,128 - #37 (
INFO  23:20:00,128 - #47 int
INFO  23:20:00,128 - #47 a
INFO  23:20:00,129 - #35 ,
INFO  23:20:00,129 - #47 int
INFO  23:20:00,129 - #47 idx
INFO  23:20:00,129 - #38 )
INFO  23:20:00,129 - #41 {
INFO  23:20:00,129 - #47 this
INFO  23:20:00,129 - #36 .
INFO  23:20:00,129 - #47 pos
INFO  23:20:00,129 - #39 [
INFO  23:20:00,129 - #47 idx
INFO  23:20:00,129 - #40 ]
INFO  23:20:00,130 - #30 =
INFO  23:20:00,130 - #47 a
INFO  23:20:00,130 - #33 ;
INFO  23:20:00,130 - #42 }
INFO  23:20:00,130 - #13 void
INFO  23:20:00,130 - #47 putn
INFO  23:20:00,130 - #37 (
INFO  23:20:00,130 - #47 int
INFO  23:20:00,130 - #47 a
INFO  23:20:00,131 - #35 ,
INFO  23:20:00,131 - #47 int
INFO  23:20:00,131 - #47 idx
INFO  23:20:00,131 - #38 )
INFO  23:20:00,131 - #41 {
INFO  23:20:00,131 - #47 this
INFO  23:20:00,131 - #36 .
INFO  23:20:00,131 - #47 neg
INFO  23:20:00,131 - #39 [
INFO  23:20:00,131 - #47 idx
INFO  23:20:00,131 - #40 ]
INFO  23:20:00,131 - #30 =
INFO  23:20:00,131 - #47 a
INFO  23:20:00,131 - #33 ;
INFO  23:20:00,131 - #42 }
INFO  23:20:00,131 - #47 int
INFO  23:20:00,131 - #47 getp
INFO  23:20:00,131 - #37 (
INFO  23:20:00,131 - #47 int
INFO  23:20:00,131 - #47 idx
INFO  23:20:00,131 - #38 )
INFO  23:20:00,131 - #41 {
INFO  23:20:00,131 - #12 return
INFO  23:20:00,131 - #47 pos
INFO  23:20:00,131 - #39 [
INFO  23:20:00,131 - #47 idx
INFO  23:20:00,131 - #40 ]
INFO  23:20:00,131 - #33 ;
INFO  23:20:00,131 - #42 }
INFO  23:20:00,131 - #47 int
INFO  23:20:00,131 - #47 getn
INFO  23:20:00,131 - #37 (
INFO  23:20:00,131 - #47 int
INFO  23:20:00,131 - #47 idx
INFO  23:20:00,131 - #38 )
INFO  23:20:00,131 - #41 {
INFO  23:20:00,132 - #12 return
INFO  23:20:00,132 - #47 neg
INFO  23:20:00,132 - #39 [
INFO  23:20:00,132 - #47 idx
INFO  23:20:00,132 - #40 ]
INFO  23:20:00,132 - #33 ;
INFO  23:20:00,132 - #42 }
INFO  23:20:00,132 - #42 }
INFO  23:20:00,132 - #42 }
INFO  23:20:00,132 - #47 Table
INFO  23:20:00,132 - #47 val
INFO  23:20:00,132 - #33 ;
INFO  23:20:00,132 - #47 Int
INFO  23:20:00,132 - #47 rows
INFO  23:20:00,132 - #35 ,
INFO  23:20:00,132 - #47 columns
INFO  23:20:00,132 - #33 ;
INFO  23:20:00,132 - #41 {
INFO  23:20:00,133 - #13 void
INFO  23:20:00,133 - #47 f
INFO  23:20:00,133 - #37 (
INFO  23:20:00,133 - #47 char
INFO  23:20:00,133 - #47 ch
INFO  23:20:00,133 - #35 ,
INFO  23:20:00,133 - #47 int
INFO  23:20:00,133 - #47 a
INFO  23:20:00,133 - #35 ,
INFO  23:20:00,133 - #47 int
INFO  23:20:00,133 - #47 arg
INFO  23:20:00,133 - #38 )
INFO  23:20:00,133 - #47 int
INFO  23:20:00,133 - #47 x
INFO  23:20:00,133 - #33 ;
INFO  23:20:00,133 - #41 {
INFO  23:20:00,133 - #47 x
INFO  23:20:00,133 - #30 =
INFO  23:20:00,133 - #47 arg
INFO  23:20:00,133 - #33 ;
INFO  23:20:00,133 - #42 }
INFO  23:20:00,133 - #13 void
INFO  23:20:00,133 - #47 main
INFO  23:20:00,133 - #37 (
INFO  23:20:00,133 - #38 )
INFO  23:20:00,133 - #47 int
INFO  23:20:00,133 - #47 x
INFO  23:20:00,134 - #35 ,
INFO  23:20:00,134 - #47 i
INFO  23:20:00,134 - #33 ;
INFO  23:20:00,134 - #47 char
INFO  23:20:00,134 - #47 c
INFO  23:20:00,134 - #33 ;
INFO  23:20:00,134 - #47 int
INFO  23:20:00,134 - #47 arr
INFO  23:20:00,134 - #39 [
INFO  23:20:00,134 - #40 ]
INFO  23:20:00,134 - #33 ;
INFO  23:20:00,134 - #41 {
INFO  23:20:00,134 - #47 val
INFO  23:20:00,134 - #30 =
INFO  23:20:00,134 - #9 new
INFO  23:20:00,134 - #47 Table
INFO  23:20:00,134 - #37 (
INFO  23:20:00,134 - #46 2
INFO  23:20:00,134 - #38 )
INFO  23:20:00,134 - #33 ;
INFO  23:20:00,134 - #47 arr
INFO  23:20:00,134 - #30 =
INFO  23:20:00,134 - #9 new
INFO  23:20:00,134 - #47 int
INFO  23:20:00,134 - #39 [
INFO  23:20:00,134 - #46 3
INFO  23:20:00,134 - #40 ]
INFO  23:20:00,134 - #33 ;
INFO  23:20:00,134 - #47 i
INFO  23:20:00,135 - #30 =
INFO  23:20:00,135 - #46 0
INFO  23:20:00,135 - #33 ;
INFO  23:20:00,135 - #8 while
INFO  23:20:00,135 - #37 (
INFO  23:20:00,135 - #47 i
INFO  23:20:00,135 - #26 <
INFO  23:20:00,135 - #46 3
INFO  23:20:00,135 - #38 )
INFO  23:20:00,135 - #41 {
INFO  23:20:00,135 - #47 arr
INFO  23:20:00,135 - #39 [
INFO  23:20:00,135 - #47 i
INFO  23:20:00,135 - #40 ]
INFO  23:20:00,135 - #30 =
INFO  23:20:00,135 - #47 i
INFO  23:20:00,135 - #33 ;
INFO  23:20:00,135 - #47 i
INFO  23:20:00,135 - #31 ++
INFO  23:20:00,135 - #33 ;
INFO  23:20:00,136 - #42 }
INFO  23:20:00,136 - #47 arr
INFO  23:20:00,136 - #36 .
INFO  23:20:00,136 - #16 foreach
ERROR 23:20:00,136 - 
Sintaksna greska na liniji 29
ERROR 23:20:00,136 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 29
