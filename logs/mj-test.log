INFO  01:37:35,297 - Compiling source file: /Users/stankovicuros27/Code/university/pp1_project/workspace/MJCompiler/test/program.mj
INFO  01:37:35,310 - #2 program
INFO  01:37:35,310 - #44 test302
INFO  01:37:35,310 - #6 const
INFO  01:37:35,310 - #44 int
INFO  01:37:35,310 - #44 i
INFO  01:37:35,310 - #30 =
INFO  01:37:35,310 - #45 3
INFO  01:37:35,310 - #33 ;
INFO  01:37:35,310 - #6 const
INFO  01:37:35,311 - #44 bool
INFO  01:37:35,311 - #44 bt
INFO  01:37:35,311 - #30 =
INFO  01:37:35,311 - #46 true
INFO  01:37:35,311 - #33 ;
INFO  01:37:35,311 - #6 const
INFO  01:37:35,311 - #44 bool
INFO  01:37:35,311 - #44 bf
INFO  01:37:35,311 - #30 =
INFO  01:37:35,311 - #46 false
INFO  01:37:35,311 - #33 ;
INFO  01:37:35,311 - #6 const
INFO  01:37:35,311 - #44 char
INFO  01:37:35,311 - #44 c
INFO  01:37:35,311 - #30 =
INFO  01:37:35,311 - #47 c
INFO  01:37:35,311 - #33 ;
INFO  01:37:35,311 - #44 int
INFO  01:37:35,311 - #44 niz
INFO  01:37:35,311 - #39 [
INFO  01:37:35,311 - #40 ]
INFO  01:37:35,312 - #35 ,
INFO  01:37:35,312 - #44 niz2
INFO  01:37:35,312 - #39 [
INFO  01:37:35,312 - #40 ]
INFO  01:37:35,312 - #35 ,
INFO  01:37:35,312 - #44 a
INFO  01:37:35,312 - #35 ,
INFO  01:37:35,312 - #44 b
INFO  01:37:35,312 - #33 ;
INFO  01:37:35,312 - #44 char
INFO  01:37:35,312 - #44 nizch
INFO  01:37:35,312 - #39 [
INFO  01:37:35,312 - #40 ]
INFO  01:37:35,312 - #33 ;
INFO  01:37:35,312 - #41 {
INFO  01:37:35,312 - #13 void
INFO  01:37:35,312 - #44 main
INFO  01:37:35,313 - #37 (
INFO  01:37:35,313 - #38 )
INFO  01:37:35,313 - #41 {
INFO  01:37:35,313 - #42 }
INFO  01:37:35,313 - #44 int
INFO  01:37:35,313 - #44 sum
INFO  01:37:35,313 - #37 (
INFO  01:37:35,313 - #44 int
INFO  01:37:35,314 - #44 a
INFO  01:37:35,314 - #35 ,
INFO  01:37:35,314 - #44 int
INFO  01:37:35,314 - #44 b
INFO  01:37:35,314 - #38 )
INFO  01:37:35,314 - #41 {
INFO  01:37:35,314 - #12 return
INFO  01:37:35,314 - #44 a
INFO  01:37:35,314 - #17 +
INFO  01:37:35,314 - #44 b
INFO  01:37:35,314 - #33 ;
INFO  01:37:35,314 - #42 }
INFO  01:37:35,314 - #13 void
INFO  01:37:35,314 - #44 main1
INFO  01:37:35,315 - #37 (
INFO  01:37:35,315 - #38 )
INFO  01:37:35,315 - #44 int
INFO  01:37:35,315 - #44 fp1
INFO  01:37:35,315 - #33 ;
INFO  01:37:35,315 - #44 char
INFO  01:37:35,315 - #44 fp2
INFO  01:37:35,315 - #33 ;
INFO  01:37:35,315 - #44 bool
INFO  01:37:35,315 - #44 fp3
INFO  01:37:35,315 - #33 ;
INFO  01:37:35,315 - #44 int
INFO  01:37:35,315 - #44 aa
INFO  01:37:35,315 - #33 ;
INFO  01:37:35,317 - #44 char
INFO  01:37:35,317 - #44 bb
INFO  01:37:35,317 - #33 ;
INFO  01:37:35,317 - #41 {
INFO  01:37:35,317 - #44 aa
INFO  01:37:35,317 - #30 =
INFO  01:37:35,317 - #45 1
INFO  01:37:35,317 - #33 ;
INFO  01:37:35,317 - #44 bb
INFO  01:37:35,317 - #30 =
INFO  01:37:35,317 - #47 c
INFO  01:37:35,318 - #33 ;
INFO  01:37:35,318 - #44 fp1
INFO  01:37:35,318 - #30 =
INFO  01:37:35,318 - #45 2
INFO  01:37:35,318 - #33 ;
INFO  01:37:35,318 - #44 fp2
INFO  01:37:35,318 - #30 =
INFO  01:37:35,318 - #44 bb
INFO  01:37:35,318 - #33 ;
INFO  01:37:35,318 - #44 fp3
INFO  01:37:35,318 - #30 =
INFO  01:37:35,318 - #46 true
INFO  01:37:35,318 - #33 ;
INFO  01:37:35,318 - #44 aa
INFO  01:37:35,318 - #30 =
INFO  01:37:35,318 - #37 (
INFO  01:37:35,318 - #45 1
INFO  01:37:35,318 - #38 )
INFO  01:37:35,318 - #33 ;
INFO  01:37:35,319 - #44 aa
INFO  01:37:35,319 - #30 =
INFO  01:37:35,319 - #37 (
INFO  01:37:35,319 - #44 fp1
INFO  01:37:35,319 - #38 )
INFO  01:37:35,319 - #33 ;
INFO  01:37:35,319 - #44 aa
INFO  01:37:35,319 - #30 =
INFO  01:37:35,319 - #45 5
INFO  01:37:35,319 - #19 *
INFO  01:37:35,319 - #45 2
INFO  01:37:35,319 - #19 *
INFO  01:37:35,319 - #44 a
INFO  01:37:35,319 - #33 ;
INFO  01:37:35,319 - #44 aa
INFO  01:37:35,320 - #30 =
INFO  01:37:35,320 - #18 -
INFO  01:37:35,320 - #45 5
INFO  01:37:35,320 - #19 *
INFO  01:37:35,320 - #45 2
INFO  01:37:35,320 - #19 *
INFO  01:37:35,320 - #44 a
INFO  01:37:35,320 - #17 +
INFO  01:37:35,320 - #44 a
INFO  01:37:35,320 - #17 +
INFO  01:37:35,320 - #45 5
INFO  01:37:35,320 - #20 /
INFO  01:37:35,320 - #45 2
INFO  01:37:35,320 - #33 ;
INFO  01:37:35,320 - #44 niz
INFO  01:37:35,320 - #39 [
INFO  01:37:35,320 - #45 1
INFO  01:37:35,320 - #40 ]
INFO  01:37:35,320 - #30 =
INFO  01:37:35,320 - #45 1
INFO  01:37:35,320 - #33 ;
INFO  01:37:35,320 - #44 niz
INFO  01:37:35,320 - #39 [
INFO  01:37:35,321 - #45 2
INFO  01:37:35,321 - #40 ]
INFO  01:37:35,321 - #30 =
INFO  01:37:35,321 - #45 2
INFO  01:37:35,321 - #33 ;
INFO  01:37:35,321 - #44 niz
INFO  01:37:35,321 - #30 =
INFO  01:37:35,321 - #9 new
INFO  01:37:35,321 - #44 int
INFO  01:37:35,321 - #39 [
INFO  01:37:35,321 - #45 20
INFO  01:37:35,321 - #40 ]
INFO  01:37:35,321 - #33 ;
INFO  01:37:35,321 - #44 aa
INFO  01:37:35,321 - #30 =
INFO  01:37:35,321 - #44 sum
INFO  01:37:35,321 - #37 (
INFO  01:37:35,321 - #45 1
INFO  01:37:35,321 - #35 ,
INFO  01:37:35,321 - #45 2
INFO  01:37:35,321 - #38 )
INFO  01:37:35,321 - #33 ;
INFO  01:37:35,321 - #44 sum
INFO  01:37:35,321 - #37 (
INFO  01:37:35,321 - #45 1
INFO  01:37:35,321 - #35 ,
INFO  01:37:35,322 - #45 2
INFO  01:37:35,322 - #38 )
INFO  01:37:35,322 - #33 ;
INFO  01:37:35,322 - #44 aa
INFO  01:37:35,322 - #31 ++
INFO  01:37:35,322 - #33 ;
INFO  01:37:35,322 - #44 aa
INFO  01:37:35,322 - #32 --
INFO  01:37:35,322 - #33 ;
INFO  01:37:35,322 - #8 while
INFO  01:37:35,322 - #37 (
INFO  01:37:35,322 - #44 a
INFO  01:37:35,322 - #24 >
INFO  01:37:35,322 - #45 5
INFO  01:37:35,323 - #38 )
INFO  01:37:35,323 - #41 {
INFO  01:37:35,323 - #44 a
INFO  01:37:35,323 - #32 --
INFO  01:37:35,323 - #33 ;
INFO  01:37:35,323 - #3 break
INFO  01:37:35,323 - #33 ;
INFO  01:37:35,323 - #42 }
INFO  01:37:35,323 - #8 while
INFO  01:37:35,323 - #37 (
INFO  01:37:35,323 - #44 a
INFO  01:37:35,323 - #24 >
INFO  01:37:35,323 - #45 5
INFO  01:37:35,323 - #38 )
INFO  01:37:35,323 - #41 {
INFO  01:37:35,323 - #15 continue
INFO  01:37:35,324 - #33 ;
INFO  01:37:35,324 - #42 }
INFO  01:37:35,324 - #12 return
INFO  01:37:35,324 - #33 ;
INFO  01:37:35,324 - #11 read
INFO  01:37:35,324 - #37 (
INFO  01:37:35,324 - #44 aa
INFO  01:37:35,324 - #38 )
INFO  01:37:35,324 - #33 ;
INFO  01:37:35,324 - #10 print
INFO  01:37:35,324 - #37 (
INFO  01:37:35,324 - #44 aa
INFO  01:37:35,324 - #38 )
INFO  01:37:35,324 - #33 ;
INFO  01:37:35,324 - #10 print
INFO  01:37:35,324 - #37 (
INFO  01:37:35,324 - #44 c
INFO  01:37:35,324 - #38 )
INFO  01:37:35,324 - #33 ;
INFO  01:37:35,324 - #10 print
INFO  01:37:35,324 - #37 (
INFO  01:37:35,324 - #45 2
INFO  01:37:35,324 - #38 )
INFO  01:37:35,324 - #33 ;
INFO  01:37:35,324 - #42 }
INFO  01:37:35,324 - #42 }
INFO  01:37:35,327 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  ProgramDeclListEVar(
    ProgramDeclListEVar(
      ProgramDeclListEConst(
        ProgramDeclListEConst(
          ProgramDeclListEConst(
            ProgramDeclListEConst(
              ProgramDeclListEEmpty(
              ) [ProgramDeclListEEmpty]
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDeclInnerListSingle(
                  ConstDeclInnerListElement(
                   i
                    ConstNum(
                     3
                    ) [ConstNum]
                  ) [ConstDeclInnerListElement]
                ) [ConstDeclInnerListSingle]
              ) [ConstDecl]
            ) [ProgramDeclListEConst]
            ConstDecl(
              Type(
               bool
              ) [Type]
              ConstDeclInnerListSingle(
                ConstDeclInnerListElement(
                 bt
                  ConstBool(
                   true
                  ) [ConstBool]
                ) [ConstDeclInnerListElement]
              ) [ConstDeclInnerListSingle]
            ) [ConstDecl]
          ) [ProgramDeclListEConst]
          ConstDecl(
            Type(
             bool
            ) [Type]
            ConstDeclInnerListSingle(
              ConstDeclInnerListElement(
               bf
                ConstBool(
                 false
                ) [ConstBool]
              ) [ConstDeclInnerListElement]
            ) [ConstDeclInnerListSingle]
          ) [ConstDecl]
        ) [ProgramDeclListEConst]
        ConstDecl(
          Type(
           char
          ) [Type]
          ConstDeclInnerListSingle(
            ConstDeclInnerListElement(
             c
              ConstChar(
               c
              ) [ConstChar]
            ) [ConstDeclInnerListElement]
          ) [ConstDeclInnerListSingle]
        ) [ConstDecl]
      ) [ProgramDeclListEConst]
      VarDeclGlobalExists(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDeclInnerListMultiple(
            VarDeclInnerListMultiple(
              VarDeclInnerListMultiple(
                VarDeclInnerListSingle(
                  VarDeclInnerListElementArray(
                   niz
                  ) [VarDeclInnerListElementArray]
                ) [VarDeclInnerListSingle]
                VarDeclInnerListElementArray(
                 niz2
                ) [VarDeclInnerListElementArray]
              ) [VarDeclInnerListMultiple]
              VarDeclInnerListElementVar(
               a
              ) [VarDeclInnerListElementVar]
            ) [VarDeclInnerListMultiple]
            VarDeclInnerListElementVar(
             b
            ) [VarDeclInnerListElementVar]
          ) [VarDeclInnerListMultiple]
        ) [VarDecl]
      ) [VarDeclGlobalExists]
    ) [ProgramDeclListEVar]
    VarDeclGlobalExists(
      VarDecl(
        Type(
         char
        ) [Type]
        VarDeclInnerListSingle(
          VarDeclInnerListElementArray(
           nizch
          ) [VarDeclInnerListElementArray]
        ) [VarDeclInnerListSingle]
      ) [VarDecl]
    ) [VarDeclGlobalExists]
  ) [ProgramDeclListEVar]
  MethodDeclListEExists(
    MethodDeclListEExists(
      MethodDeclListEExists(
        MethodDeclListEEmpty(
        ) [MethodDeclListEEmpty]
        MethodDecl(
          MethodReturnTypeIsVoid(
          ) [MethodReturnTypeIsVoid]
          MethodName(
           main
          ) [MethodName]
          FormParsOptionalEmpty(
          ) [FormParsOptionalEmpty]
          VarDeclListEEmpty(
          ) [VarDeclListEEmpty]
          StatementListEEmpty(
          ) [StatementListEEmpty]
        ) [MethodDecl]
      ) [MethodDeclListEExists]
      MethodDecl(
        MethodReturnTypeHasType(
          Type(
           int
          ) [Type]
        ) [MethodReturnTypeHasType]
        MethodName(
         sum
        ) [MethodName]
        FormParsOptionalExists(
          FormParsMultiple(
            FormParsSingle(
              FormParamVar(
                Type(
                 int
                ) [Type]
               a
              ) [FormParamVar]
            ) [FormParsSingle]
            FormParamVar(
              Type(
               int
              ) [Type]
             b
            ) [FormParamVar]
          ) [FormParsMultiple]
        ) [FormParsOptionalExists]
        VarDeclListEEmpty(
        ) [VarDeclListEEmpty]
        StatementListEExists(
          StatementListEEmpty(
          ) [StatementListEEmpty]
          StatementReturnExpr(
            ExprMultiple(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSingle(
                     a
                    ) [DesignatorSingle]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
              AddopPlus(
              ) [AddopPlus]
              TermSingle(
                FactorDesignator(
                  DesignatorSingle(
                   b
                  ) [DesignatorSingle]
                ) [FactorDesignator]
              ) [TermSingle]
            ) [ExprMultiple]
          ) [StatementReturnExpr]
        ) [StatementListEExists]
      ) [MethodDecl]
    ) [MethodDeclListEExists]
    MethodDecl(
      MethodReturnTypeIsVoid(
      ) [MethodReturnTypeIsVoid]
      MethodName(
       main1
      ) [MethodName]
      FormParsOptionalEmpty(
      ) [FormParsOptionalEmpty]
      VarDeclListEExists(
        VarDeclListEExists(
          VarDeclListEExists(
            VarDeclListEExists(
              VarDeclListEExists(
                VarDeclListEEmpty(
                ) [VarDeclListEEmpty]
                VarDecl(
                  Type(
                   int
                  ) [Type]
                  VarDeclInnerListSingle(
                    VarDeclInnerListElementVar(
                     fp1
                    ) [VarDeclInnerListElementVar]
                  ) [VarDeclInnerListSingle]
                ) [VarDecl]
              ) [VarDeclListEExists]
              VarDecl(
                Type(
                 char
                ) [Type]
                VarDeclInnerListSingle(
                  VarDeclInnerListElementVar(
                   fp2
                  ) [VarDeclInnerListElementVar]
                ) [VarDeclInnerListSingle]
              ) [VarDecl]
            ) [VarDeclListEExists]
            VarDecl(
              Type(
               bool
              ) [Type]
              VarDeclInnerListSingle(
                VarDeclInnerListElementVar(
                 fp3
                ) [VarDeclInnerListElementVar]
              ) [VarDeclInnerListSingle]
            ) [VarDecl]
          ) [VarDeclListEExists]
          VarDecl(
            Type(
             int
            ) [Type]
            VarDeclInnerListSingle(
              VarDeclInnerListElementVar(
               aa
              ) [VarDeclInnerListElementVar]
            ) [VarDeclInnerListSingle]
          ) [VarDecl]
        ) [VarDeclListEExists]
        VarDecl(
          Type(
           char
          ) [Type]
          VarDeclInnerListSingle(
            VarDeclInnerListElementVar(
             bb
            ) [VarDeclInnerListElementVar]
          ) [VarDeclInnerListSingle]
        ) [VarDecl]
      ) [VarDeclListEExists]
      StatementListEExists(
        StatementListEExists(
          StatementListEExists(
            StatementListEExists(
              StatementListEExists(
                StatementListEExists(
                  StatementListEExists(
                    StatementListEExists(
                      StatementListEExists(
                        StatementListEExists(
                          StatementListEExists(
                            StatementListEExists(
                              StatementListEExists(
                                StatementListEExists(
                                  StatementListEExists(
                                    StatementListEExists(
                                      StatementListEExists(
                                        StatementListEExists(
                                          StatementListEExists(
                                            StatementListEExists(
                                              StatementListEExists(
                                                StatementListEExists(
                                                  StatementListEExists(
                                                    StatementListEEmpty(
                                                    ) [StatementListEEmpty]
                                                    StatementDesignator(
                                                      DesignatorStatementAssign(
                                                        DesignatorAssignopExpression(
                                                          DesignatorSingle(
                                                           aa
                                                          ) [DesignatorSingle]
                                                          Assignop(
                                                          ) [Assignop]
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               1
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [DesignatorAssignopExpression]
                                                      ) [DesignatorStatementAssign]
                                                    ) [StatementDesignator]
                                                  ) [StatementListEExists]
                                                  StatementDesignator(
                                                    DesignatorStatementAssign(
                                                      DesignatorAssignopExpression(
                                                        DesignatorSingle(
                                                         bb
                                                        ) [DesignatorSingle]
                                                        Assignop(
                                                        ) [Assignop]
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorCharConst(
                                                             c
                                                            ) [FactorCharConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [DesignatorAssignopExpression]
                                                    ) [DesignatorStatementAssign]
                                                  ) [StatementDesignator]
                                                ) [StatementListEExists]
                                                StatementDesignator(
                                                  DesignatorStatementAssign(
                                                    DesignatorAssignopExpression(
                                                      DesignatorSingle(
                                                       fp1
                                                      ) [DesignatorSingle]
                                                      Assignop(
                                                      ) [Assignop]
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           2
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [DesignatorAssignopExpression]
                                                  ) [DesignatorStatementAssign]
                                                ) [StatementDesignator]
                                              ) [StatementListEExists]
                                              StatementDesignator(
                                                DesignatorStatementAssign(
                                                  DesignatorAssignopExpression(
                                                    DesignatorSingle(
                                                     fp2
                                                    ) [DesignatorSingle]
                                                    Assignop(
                                                    ) [Assignop]
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorDesignator(
                                                          DesignatorSingle(
                                                           bb
                                                          ) [DesignatorSingle]
                                                        ) [FactorDesignator]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [DesignatorAssignopExpression]
                                                ) [DesignatorStatementAssign]
                                              ) [StatementDesignator]
                                            ) [StatementListEExists]
                                            StatementDesignator(
                                              DesignatorStatementAssign(
                                                DesignatorAssignopExpression(
                                                  DesignatorSingle(
                                                   fp3
                                                  ) [DesignatorSingle]
                                                  Assignop(
                                                  ) [Assignop]
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorBoolConst(
                                                       true
                                                      ) [FactorBoolConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [DesignatorAssignopExpression]
                                              ) [DesignatorStatementAssign]
                                            ) [StatementDesignator]
                                          ) [StatementListEExists]
                                          StatementDesignator(
                                            DesignatorStatementAssign(
                                              DesignatorAssignopExpression(
                                                DesignatorSingle(
                                                 aa
                                                ) [DesignatorSingle]
                                                Assignop(
                                                ) [Assignop]
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorExpr(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           1
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [FactorExpr]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [DesignatorAssignopExpression]
                                            ) [DesignatorStatementAssign]
                                          ) [StatementDesignator]
                                        ) [StatementListEExists]
                                        StatementDesignator(
                                          DesignatorStatementAssign(
                                            DesignatorAssignopExpression(
                                              DesignatorSingle(
                                               aa
                                              ) [DesignatorSingle]
                                              Assignop(
                                              ) [Assignop]
                                              ExprSingle(
                                                TermSingle(
                                                  FactorExpr(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorDesignator(
                                                          DesignatorSingle(
                                                           fp1
                                                          ) [DesignatorSingle]
                                                        ) [FactorDesignator]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [FactorExpr]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [DesignatorAssignopExpression]
                                          ) [DesignatorStatementAssign]
                                        ) [StatementDesignator]
                                      ) [StatementListEExists]
                                      StatementDesignator(
                                        DesignatorStatementAssign(
                                          DesignatorAssignopExpression(
                                            DesignatorSingle(
                                             aa
                                            ) [DesignatorSingle]
                                            Assignop(
                                            ) [Assignop]
                                            ExprSingle(
                                              TermMultiple(
                                                TermMultiple(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     5
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                  AddopMul(
                                                  ) [AddopMul]
                                                  FactorNumConst(
                                                   2
                                                  ) [FactorNumConst]
                                                ) [TermMultiple]
                                                AddopMul(
                                                ) [AddopMul]
                                                FactorDesignator(
                                                  DesignatorSingle(
                                                   a
                                                  ) [DesignatorSingle]
                                                ) [FactorDesignator]
                                              ) [TermMultiple]
                                            ) [ExprSingle]
                                          ) [DesignatorAssignopExpression]
                                        ) [DesignatorStatementAssign]
                                      ) [StatementDesignator]
                                    ) [StatementListEExists]
                                    StatementDesignator(
                                      DesignatorStatementAssign(
                                        DesignatorAssignopExpression(
                                          DesignatorSingle(
                                           aa
                                          ) [DesignatorSingle]
                                          Assignop(
                                          ) [Assignop]
                                          ExprMultiple(
                                            ExprMultiple(
                                              ExprSingleMinus(
                                                TermMultiple(
                                                  TermMultiple(
                                                    TermSingle(
                                                      FactorNumConst(
                                                       5
                                                      ) [FactorNumConst]
                                                    ) [TermSingle]
                                                    AddopMul(
                                                    ) [AddopMul]
                                                    FactorNumConst(
                                                     2
                                                    ) [FactorNumConst]
                                                  ) [TermMultiple]
                                                  AddopMul(
                                                  ) [AddopMul]
                                                  FactorDesignator(
                                                    DesignatorSingle(
                                                     a
                                                    ) [DesignatorSingle]
                                                  ) [FactorDesignator]
                                                ) [TermMultiple]
                                              ) [ExprSingleMinus]
                                              AddopPlus(
                                              ) [AddopPlus]
                                              TermSingle(
                                                FactorDesignator(
                                                  DesignatorSingle(
                                                   a
                                                  ) [DesignatorSingle]
                                                ) [FactorDesignator]
                                              ) [TermSingle]
                                            ) [ExprMultiple]
                                            AddopPlus(
                                            ) [AddopPlus]
                                            TermMultiple(
                                              TermSingle(
                                                FactorNumConst(
                                                 5
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                              AddopDiv(
                                              ) [AddopDiv]
                                              FactorNumConst(
                                               2
                                              ) [FactorNumConst]
                                            ) [TermMultiple]
                                          ) [ExprMultiple]
                                        ) [DesignatorAssignopExpression]
                                      ) [DesignatorStatementAssign]
                                    ) [StatementDesignator]
                                  ) [StatementListEExists]
                                  StatementDesignator(
                                    DesignatorStatementAssign(
                                      DesignatorAssignopExpression(
                                        DesignatorSquareBrackets(
                                          DesignatorSingle(
                                           niz
                                          ) [DesignatorSingle]
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               1
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [DesignatorSquareBrackets]
                                        Assignop(
                                        ) [Assignop]
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             1
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [DesignatorAssignopExpression]
                                    ) [DesignatorStatementAssign]
                                  ) [StatementDesignator]
                                ) [StatementListEExists]
                                StatementDesignator(
                                  DesignatorStatementAssign(
                                    DesignatorAssignopExpression(
                                      DesignatorSquareBrackets(
                                        DesignatorSingle(
                                         niz
                                        ) [DesignatorSingle]
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             2
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [DesignatorSquareBrackets]
                                      Assignop(
                                      ) [Assignop]
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           2
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [DesignatorAssignopExpression]
                                  ) [DesignatorStatementAssign]
                                ) [StatementDesignator]
                              ) [StatementListEExists]
                              StatementDesignator(
                                DesignatorStatementAssign(
                                  DesignatorAssignopExpression(
                                    DesignatorSingle(
                                     niz
                                    ) [DesignatorSingle]
                                    Assignop(
                                    ) [Assignop]
                                    ExprSingle(
                                      TermSingle(
                                        FactorNewArray(
                                          Type(
                                           int
                                          ) [Type]
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               20
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [FactorNewArray]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [DesignatorAssignopExpression]
                                ) [DesignatorStatementAssign]
                              ) [StatementDesignator]
                            ) [StatementListEExists]
                            StatementDesignator(
                              DesignatorStatementAssign(
                                DesignatorAssignopExpression(
                                  DesignatorSingle(
                                   aa
                                  ) [DesignatorSingle]
                                  Assignop(
                                  ) [Assignop]
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignatorMethodCall(
                                        DesignatorSingle(
                                         sum
                                        ) [DesignatorSingle]
                                        ActParsOptionalExist(
                                          ActParsMultiple(
                                            ActParsSingle(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   1
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ActParsSingle]
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 2
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ActParsMultiple]
                                        ) [ActParsOptionalExist]
                                      ) [FactorDesignatorMethodCall]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [DesignatorAssignopExpression]
                              ) [DesignatorStatementAssign]
                            ) [StatementDesignator]
                          ) [StatementListEExists]
                          StatementDesignator(
                            DesignatorStatementAction(
                              DesignatorActionMethodCall(
                                DesignatorSingle(
                                 sum
                                ) [DesignatorSingle]
                                ActParsOptionalExist(
                                  ActParsMultiple(
                                    ActParsSingle(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           1
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ActParsSingle]
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         2
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ActParsMultiple]
                                ) [ActParsOptionalExist]
                              ) [DesignatorActionMethodCall]
                            ) [DesignatorStatementAction]
                          ) [StatementDesignator]
                        ) [StatementListEExists]
                        StatementDesignator(
                          DesignatorStatementAction(
                            DesignatorActionInc(
                              DesignatorSingle(
                               aa
                              ) [DesignatorSingle]
                            ) [DesignatorActionInc]
                          ) [DesignatorStatementAction]
                        ) [StatementDesignator]
                      ) [StatementListEExists]
                      StatementDesignator(
                        DesignatorStatementAction(
                          DesignatorActionDec(
                            DesignatorSingle(
                             aa
                            ) [DesignatorSingle]
                          ) [DesignatorActionDec]
                        ) [DesignatorStatementAction]
                      ) [StatementDesignator]
                    ) [StatementListEExists]
                    StatementWhile(
                      StatementWhileStart(
                      ) [StatementWhileStart]
                      ConditionSingle(
                        CondTermSingle(
                          CondFact(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSingle(
                                   a
                                  ) [DesignatorSingle]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                            RelopExprOptionalExist(
                              RelopGreater(
                              ) [RelopGreater]
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   5
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [RelopExprOptionalExist]
                          ) [CondFact]
                        ) [CondTermSingle]
                      ) [ConditionSingle]
                      StatementSection(
                        StatementListEExists(
                          StatementListEExists(
                            StatementListEEmpty(
                            ) [StatementListEEmpty]
                            StatementDesignator(
                              DesignatorStatementAction(
                                DesignatorActionDec(
                                  DesignatorSingle(
                                   a
                                  ) [DesignatorSingle]
                                ) [DesignatorActionDec]
                              ) [DesignatorStatementAction]
                            ) [StatementDesignator]
                          ) [StatementListEExists]
                          StatementBreak(
                          ) [StatementBreak]
                        ) [StatementListEExists]
                      ) [StatementSection]
                    ) [StatementWhile]
                  ) [StatementListEExists]
                  StatementWhile(
                    StatementWhileStart(
                    ) [StatementWhileStart]
                    ConditionSingle(
                      CondTermSingle(
                        CondFact(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSingle(
                                 a
                                ) [DesignatorSingle]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                          RelopExprOptionalExist(
                            RelopGreater(
                            ) [RelopGreater]
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 5
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [RelopExprOptionalExist]
                        ) [CondFact]
                      ) [CondTermSingle]
                    ) [ConditionSingle]
                    StatementSection(
                      StatementListEExists(
                        StatementListEEmpty(
                        ) [StatementListEEmpty]
                        StatementContinue(
                        ) [StatementContinue]
                      ) [StatementListEExists]
                    ) [StatementSection]
                  ) [StatementWhile]
                ) [StatementListEExists]
                StatementReturnVoid(
                ) [StatementReturnVoid]
              ) [StatementListEExists]
              StatementRead(
                DesignatorSingle(
                 aa
                ) [DesignatorSingle]
              ) [StatementRead]
            ) [StatementListEExists]
            StatementPrint(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSingle(
                     aa
                    ) [DesignatorSingle]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
              PrintNumConstOptionalEmpty(
              ) [PrintNumConstOptionalEmpty]
            ) [StatementPrint]
          ) [StatementListEExists]
          StatementPrint(
            ExprSingle(
              TermSingle(
                FactorDesignator(
                  DesignatorSingle(
                   c
                  ) [DesignatorSingle]
                ) [FactorDesignator]
              ) [TermSingle]
            ) [ExprSingle]
            PrintNumConstOptionalEmpty(
            ) [PrintNumConstOptionalEmpty]
          ) [StatementPrint]
        ) [StatementListEExists]
        StatementPrint(
          ExprSingle(
            TermSingle(
              FactorNumConst(
               2
              ) [FactorNumConst]
            ) [TermSingle]
          ) [ExprSingle]
          PrintNumConstOptionalEmpty(
          ) [PrintNumConstOptionalEmpty]
        ) [StatementPrint]
      ) [StatementListEExists]
    ) [MethodDecl]
  ) [MethodDeclListEExists]
) [Program]
INFO  01:37:35,328 - ===================================
INFO  01:37:35,329 - ProgramName -> line 3
INFO  01:37:35,329 - Type -> line 5
INFO  01:37:35,329 - ConstNum -> line 5
INFO  01:37:35,329 - ConstDeclInnerListElement -> line 5
INFO  01:37:35,329 - Type -> line 6
INFO  01:37:35,329 - ConstBool -> line 6
INFO  01:37:35,329 - ConstDeclInnerListElement -> line 6
INFO  01:37:35,329 - Type -> line 7
INFO  01:37:35,329 - ConstBool -> line 7
INFO  01:37:35,329 - ConstDeclInnerListElement -> line 7
INFO  01:37:35,329 - Type -> line 8
INFO  01:37:35,329 - ConstChar -> line 8
INFO  01:37:35,329 - ConstDeclInnerListElement -> line 8
INFO  01:37:35,329 - Type -> line 10
INFO  01:37:35,329 - VarDeclInnerListElementArray -> line 10
INFO  01:37:35,329 - VarDeclInnerListElementArray -> line 10
INFO  01:37:35,329 - VarDeclInnerListElementVar -> line 10
INFO  01:37:35,329 - VarDeclInnerListElementVar -> line 10
INFO  01:37:35,329 - Type -> line 11
INFO  01:37:35,329 - VarDeclInnerListElementArray -> line 11
INFO  01:37:35,330 - MethodReturnTypeIsVoid
INFO  01:37:35,330 - MethodName -> line 15
INFO  01:37:35,330 - MethodDecl -> line 15
INFO  01:37:35,330 - Type -> line 17
INFO  01:37:35,330 - MethodReturnTypeHasType -> line 17
INFO  01:37:35,330 - MethodName -> line 17
INFO  01:37:35,330 - Type -> line 17
INFO  01:37:35,330 - FormParamVar -> line 17
INFO  01:37:35,330 - Type -> line 17
INFO  01:37:35,330 - FormParamVar -> line 17
INFO  01:37:35,330 - DesignatorSingle -> line 19
INFO  01:37:35,330 - FactorDesignator -> line 19
INFO  01:37:35,330 - TermSingle -> line 19
INFO  01:37:35,330 - ExprSingle -> line 19
INFO  01:37:35,330 - DesignatorSingle -> line 19
INFO  01:37:35,330 - FactorDesignator -> line 19
INFO  01:37:35,330 - TermSingle -> line 19
INFO  01:37:35,330 - ExprMultiple -> line 19
INFO  01:37:35,330 - StatementReturnExpr -> line 19
INFO  01:37:35,330 - MethodDecl -> line 17
INFO  01:37:35,330 - MethodReturnTypeIsVoid
INFO  01:37:35,330 - MethodName -> line 22
INFO  01:37:35,330 - Type -> line 23
INFO  01:37:35,330 - VarDeclInnerListElementVar -> line 23
INFO  01:37:35,330 - Type -> line 24
INFO  01:37:35,330 - VarDeclInnerListElementVar -> line 24
INFO  01:37:35,330 - Type -> line 25
INFO  01:37:35,330 - VarDeclInnerListElementVar -> line 25
INFO  01:37:35,330 - Type -> line 26
INFO  01:37:35,330 - VarDeclInnerListElementVar -> line 26
INFO  01:37:35,330 - Type -> line 27
INFO  01:37:35,330 - VarDeclInnerListElementVar -> line 27
INFO  01:37:35,330 - DesignatorSingle -> line 30
INFO  01:37:35,330 - FactorNumConst -> line 30
INFO  01:37:35,330 - TermSingle -> line 30
INFO  01:37:35,330 - ExprSingle -> line 30
INFO  01:37:35,330 - DesignatorAssignopExpression -> line 30
INFO  01:37:35,331 - DesignatorSingle -> line 31
INFO  01:37:35,331 - FactorCharConst -> line 31
INFO  01:37:35,331 - TermSingle -> line 31
INFO  01:37:35,331 - ExprSingle -> line 31
INFO  01:37:35,331 - DesignatorAssignopExpression -> line 31
INFO  01:37:35,331 - DesignatorSingle -> line 32
INFO  01:37:35,331 - FactorNumConst -> line 32
INFO  01:37:35,331 - TermSingle -> line 32
INFO  01:37:35,331 - ExprSingle -> line 32
INFO  01:37:35,331 - DesignatorAssignopExpression -> line 32
INFO  01:37:35,331 - DesignatorSingle -> line 33
INFO  01:37:35,331 - DesignatorSingle -> line 33
INFO  01:37:35,331 - FactorDesignator -> line 33
INFO  01:37:35,331 - TermSingle -> line 33
INFO  01:37:35,331 - ExprSingle -> line 33
INFO  01:37:35,331 - DesignatorAssignopExpression -> line 33
INFO  01:37:35,331 - DesignatorSingle -> line 34
INFO  01:37:35,331 - FactorBoolConst -> line 34
INFO  01:37:35,331 - TermSingle -> line 34
INFO  01:37:35,331 - ExprSingle -> line 34
INFO  01:37:35,331 - DesignatorAssignopExpression -> line 34
INFO  01:37:35,331 - DesignatorSingle -> line 35
INFO  01:37:35,331 - FactorNumConst -> line 35
INFO  01:37:35,331 - TermSingle -> line 35
INFO  01:37:35,331 - ExprSingle -> line 35
INFO  01:37:35,331 - FactorExpr -> line 35
INFO  01:37:35,331 - TermSingle -> line 35
INFO  01:37:35,331 - ExprSingle -> line 35
INFO  01:37:35,331 - DesignatorAssignopExpression -> line 35
INFO  01:37:35,331 - DesignatorSingle -> line 36
INFO  01:37:35,331 - DesignatorSingle -> line 36
INFO  01:37:35,331 - FactorDesignator -> line 36
INFO  01:37:35,331 - TermSingle -> line 36
INFO  01:37:35,331 - ExprSingle -> line 36
INFO  01:37:35,331 - FactorExpr -> line 36
INFO  01:37:35,331 - TermSingle -> line 36
INFO  01:37:35,331 - ExprSingle -> line 36
INFO  01:37:35,331 - DesignatorAssignopExpression -> line 36
INFO  01:37:35,331 - DesignatorSingle -> line 37
INFO  01:37:35,331 - FactorNumConst -> line 37
INFO  01:37:35,331 - TermSingle -> line 37
INFO  01:37:35,331 - FactorNumConst -> line 37
INFO  01:37:35,331 - TermMultiple -> line 37
INFO  01:37:35,331 - DesignatorSingle -> line 37
INFO  01:37:35,332 - FactorDesignator -> line 37
INFO  01:37:35,332 - TermMultiple -> line 37
INFO  01:37:35,332 - ExprSingle -> line 37
INFO  01:37:35,332 - DesignatorAssignopExpression -> line 37
INFO  01:37:35,332 - DesignatorSingle -> line 39
INFO  01:37:35,332 - FactorNumConst -> line 39
INFO  01:37:35,332 - TermSingle -> line 39
INFO  01:37:35,332 - FactorNumConst -> line 39
INFO  01:37:35,332 - TermMultiple -> line 39
INFO  01:37:35,332 - DesignatorSingle -> line 39
INFO  01:37:35,332 - FactorDesignator -> line 39
INFO  01:37:35,332 - TermMultiple -> line 39
INFO  01:37:35,332 - ExprSingleMinus -> line 39
INFO  01:37:35,332 - DesignatorSingle -> line 39
INFO  01:37:35,332 - FactorDesignator -> line 39
INFO  01:37:35,332 - TermSingle -> line 39
INFO  01:37:35,332 - ExprMultiple -> line 39
INFO  01:37:35,332 - FactorNumConst -> line 39
INFO  01:37:35,332 - TermSingle -> line 39
INFO  01:37:35,332 - FactorNumConst -> line 39
INFO  01:37:35,332 - TermMultiple -> line 39
INFO  01:37:35,332 - ExprMultiple -> line 39
INFO  01:37:35,332 - DesignatorAssignopExpression -> line 39
INFO  01:37:35,332 - DesignatorSingle -> line 41
INFO  01:37:35,332 - FactorNumConst -> line 41
INFO  01:37:35,332 - TermSingle -> line 41
INFO  01:37:35,332 - ExprSingle -> line 41
INFO  01:37:35,332 - DesignatorSquareBrackets -> line 41
INFO  01:37:35,332 - FactorNumConst -> line 41
INFO  01:37:35,332 - TermSingle -> line 41
INFO  01:37:35,332 - ExprSingle -> line 41
INFO  01:37:35,332 - DesignatorAssignopExpression -> line 41
INFO  01:37:35,332 - DesignatorSingle -> line 42
INFO  01:37:35,332 - FactorNumConst -> line 42
INFO  01:37:35,332 - TermSingle -> line 42
INFO  01:37:35,332 - ExprSingle -> line 42
INFO  01:37:35,332 - DesignatorSquareBrackets -> line 42
INFO  01:37:35,332 - FactorNumConst -> line 42
INFO  01:37:35,332 - TermSingle -> line 42
INFO  01:37:35,332 - ExprSingle -> line 42
INFO  01:37:35,332 - DesignatorAssignopExpression -> line 42
INFO  01:37:35,332 - DesignatorSingle -> line 44
INFO  01:37:35,332 - Type -> line 44
INFO  01:37:35,332 - FactorNumConst -> line 44
INFO  01:37:35,332 - TermSingle -> line 44
INFO  01:37:35,332 - ExprSingle -> line 44
INFO  01:37:35,332 - FactorNewArray -> line 44
INFO  01:37:35,332 - TermSingle -> line 44
INFO  01:37:35,332 - ExprSingle -> line 44
INFO  01:37:35,332 - DesignatorAssignopExpression -> line 44
INFO  01:37:35,332 - DesignatorSingle -> line 45
INFO  01:37:35,332 - DesignatorSingle -> line 45
INFO  01:37:35,332 - FactorNumConst -> line 45
INFO  01:37:35,332 - TermSingle -> line 45
INFO  01:37:35,332 - ExprSingle -> line 45
INFO  01:37:35,333 - ActParsSingle -> line 45
INFO  01:37:35,333 - FactorNumConst -> line 45
INFO  01:37:35,333 - TermSingle -> line 45
INFO  01:37:35,333 - ExprSingle -> line 45
INFO  01:37:35,333 - ActParsMultiple -> line 45
INFO  01:37:35,333 - FactorDesignatorMethodCall -> line 45
INFO  01:37:35,333 - TermSingle -> line 45
INFO  01:37:35,333 - ExprSingle -> line 45
INFO  01:37:35,333 - DesignatorAssignopExpression -> line 45
INFO  01:37:35,333 - DesignatorSingle -> line 46
INFO  01:37:35,333 - FactorNumConst -> line 46
INFO  01:37:35,333 - TermSingle -> line 46
INFO  01:37:35,333 - ExprSingle -> line 46
INFO  01:37:35,333 - ActParsSingle -> line 46
INFO  01:37:35,333 - FactorNumConst -> line 46
INFO  01:37:35,333 - TermSingle -> line 46
INFO  01:37:35,333 - ExprSingle -> line 46
INFO  01:37:35,333 - ActParsMultiple -> line 46
INFO  01:37:35,333 - DesignatorActionMethodCall -> line 46
INFO  01:37:35,333 - DesignatorSingle -> line 47
INFO  01:37:35,333 - DesignatorActionInc -> line 47
INFO  01:37:35,333 - DesignatorSingle -> line 48
INFO  01:37:35,333 - DesignatorActionDec -> line 48
INFO  01:37:35,333 - StatementWhileStart
INFO  01:37:35,333 - DesignatorSingle -> line 50
INFO  01:37:35,333 - FactorDesignator -> line 50
INFO  01:37:35,333 - TermSingle -> line 50
INFO  01:37:35,333 - ExprSingle -> line 50
INFO  01:37:35,333 - FactorNumConst -> line 50
INFO  01:37:35,333 - TermSingle -> line 50
INFO  01:37:35,333 - ExprSingle -> line 50
INFO  01:37:35,333 - DesignatorSingle -> line 51
INFO  01:37:35,333 - DesignatorActionDec -> line 51
INFO  01:37:35,333 - StatementBreak
INFO  01:37:35,333 - StatementWhile -> line 50
INFO  01:37:35,333 - StatementWhileStart
INFO  01:37:35,333 - DesignatorSingle -> line 55
INFO  01:37:35,333 - FactorDesignator -> line 55
INFO  01:37:35,333 - TermSingle -> line 55
INFO  01:37:35,333 - ExprSingle -> line 55
INFO  01:37:35,333 - FactorNumConst -> line 55
INFO  01:37:35,333 - TermSingle -> line 55
INFO  01:37:35,333 - ExprSingle -> line 55
INFO  01:37:35,333 - StatementContinue
INFO  01:37:35,333 - StatementWhile -> line 55
INFO  01:37:35,333 - StatementReturnVoid
INFO  01:37:35,333 - DesignatorSingle -> line 62
INFO  01:37:35,333 - StatementRead -> line 62
INFO  01:37:35,333 - DesignatorSingle -> line 63
INFO  01:37:35,333 - FactorDesignator -> line 63
INFO  01:37:35,333 - TermSingle -> line 63
INFO  01:37:35,333 - ExprSingle -> line 63
INFO  01:37:35,333 - StatementPrint -> line 63
INFO  01:37:35,333 - DesignatorSingle -> line 64
INFO  01:37:35,333 - FactorDesignator -> line 64
INFO  01:37:35,333 - TermSingle -> line 64
INFO  01:37:35,333 - ExprSingle -> line 64
INFO  01:37:35,333 - StatementPrint -> line 64
INFO  01:37:35,333 - FactorNumConst -> line 65
INFO  01:37:35,333 - TermSingle -> line 65
INFO  01:37:35,333 - ExprSingle -> line 65
INFO  01:37:35,333 - StatementPrint -> line 65
INFO  01:37:35,333 - MethodDecl -> line 22
INFO  01:37:35,333 - Program -> line 3
INFO  01:37:35,333 - ===================================
INFO  01:37:35,334 - Parsiranje uspesno zavrseno!
